//
// Copyright (c) 2009, Jim Hourihan
// All rights reserved.
//
// SPDX-License-Identifier: Apache-2.0
//
#ifndef __MuQt5__QApplicationType__h__
#define __MuQt5__QApplicationType__h__
#include <iostream>
#include <Mu/Class.h>
#include <Mu/MuProcess.h>
#include <QtCore/QtCore>
#include <QtGui/QtGui>
#include <QtWidgets/QtWidgets>
#include <QtNetwork/QtNetwork>
#include <QtWebEngine/QtWebEngine>
#include <QtWebEngineWidgets/QtWebEngineWidgets>
#include <QtQml/QtQml>
#include <QtQuick/QtQuick>
#include <QtQuickWidgets/QtQuickWidgets>
#include <QtSvg/QtSvg>
#include <MuQt5/Bridge.h>

namespace Mu
{
    class MuQt_QApplication;

    //
    //  NOTE: file generated by qt2mu.py
    //

    class QApplicationType : public Class
    {
    public:
        typedef MuQt_QApplication MuQtType;
        typedef QApplication QtType;

        //
        //  Constructors
        //

        QApplicationType(Context* context, const char* name,
                         Class* superClass = 0, Class* superClass2 = 0);

        virtual ~QApplicationType();

        static bool isInheritable() { return true; }

        static inline ClassInstance* cachedInstance(const MuQtType*);

        //
        //  Class API
        //

        virtual void load();

        MemberFunction* _func[0];
    };

    // Inheritable object

    class MuQt_QApplication : public QApplication
    {
    public:
        virtual ~MuQt_QApplication();

    public:
        bool event_pub(QEvent* e) { return event(e); }

        bool event_pub_parent(QEvent* e) { return QApplication::event(e); }

    public:
        const QApplicationType* _baseType;
        ClassInstance* _obj;
        const CallEnvironment* _env;
    };

    inline ClassInstance*
    QApplicationType::cachedInstance(const QApplicationType::MuQtType* obj)
    {
        return obj->_obj;
    }

} // namespace Mu

#endif // __MuQt__QApplicationType__h__
