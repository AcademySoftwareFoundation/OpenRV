#!/bin/sh

# Uncomment this if you want to use the pulseaudio/libsndfile package mismatch
# workaround below.
# export RV_USE_PULSEAUDIO_WORKAROUND=1

# Workaround for pulseaudio/libsndfile package mismatch on FC/Cent that causes
# crash when accessing preferences.
if [ -e /usr/bin/padsp ] && [ -n "$RV_USE_PULSEAUDIO_WORKAROUND" ]; then
    export OPTIONAL_PADSP="/usr/bin/padsp"
else
    export OPTIONAL_PADSP=""
fi

if [ -n "$QT_PLUGIN_PATH" ]; then
    echo "INFO: warning: QT_PLUGIN_PATH is set, which can cause RV to load the wrong Qt libraries/plugins.  Unsetting..."
    unset QT_PLUGIN_PATH
fi

# Uncomment this if you're on an older linux distro and RV is hanging in
# the Audio preferences or on startup with audio sources
# export PA_ALSA_EXCLUDE_DMIX_DEFAULT=1

# For unknown reasons, LANG causes problems when set to
# interesting values (like fr_FR.UTF-8).
unset LANG

if [ -z "$RV_HOME" ]; then
    current_dir=$(dirname "$(readlink -f "$0")" )
    root_dir=$(dirname "$current_dir" )
    export RV_HOME="$root_dir"
fi

rvbin="$RV_HOME/bin/rv.bin.i386"
if [ ! -e "$rvbin" ]; then
    rvbin="$RV_HOME/bin/rv.bin"
fi

unset BUILD_ROOT
export PATH="$RV_HOME/bin:$PATH"

if [ -n "$LD_LIBRARY_PATH" ]; then
     export LD_LIBRARY_PATH="$RV_HOME/lib:$LD_LIBRARY_PATH"
else
     export LD_LIBRARY_PATH="$RV_HOME/lib"
fi

# Detect if VFX2023 (OpenSSL 1.1.1) or VFX2024+ (OpenSSL 3+).
python_version=$("$RV_HOME/bin/python" -c 'import sys; print(f"{sys.version_info.major}.{sys.version_info.minor}")')
minor_version=$(echo "$python_version" | cut -d. -f2)

is_python_vfx2023=0 # VFX2023 Python 3.10
is_python_vfx2024=0 # VFX2024 Python 3.11

if [ "$minor_version" -gt 10 ]; then
    is_python_vfx2024=1
else
    is_python_vfx2023=1
fi

# Unless the RV_USE_SYSTEM_OPENSSL environment variable is set, use the
# OpenSSL provided with RV when the required OpenSSL version cannot be found.
if [ -z "$RV_USE_SYSTEM_OPENSSL" ]; then
    required_openssl_found=""
    if [ "$is_python_vfx2023" -eq 1 ]; then
        required_openssl_found=$(openssl version | grep 1.1.1)
    fi

    if [ -z "$required_openssl_found" ]; then
        export LD_LIBRARY_PATH="$RV_HOME/lib/OpenSSL:$LD_LIBRARY_PATH"
    fi
fi

# exec RV
if [ "$1" = "-d" ] || [ "$1" = "--debug" ]; then
  shift  # skip '-d / --debug'
    gdb "${OPTIONAL_PADSP}${rvbin}" "$@"
else
    exec "${OPTIONAL_PADSP}${rvbin}" "$@"
fi
